@model LexiconLMSPortal.Models.ViewModels.CourseViewModel

<div id="EditCourseModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="EditCourse">
    <div class="modal-dialog" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="exampleModalLabel">Edit Course</h4>
            </div>

            <form method="post" action="@Url.Action("EditCourse", "Teacher", Model)" class="form-group" data-lms-ajax="true" data-lms-target="#CList">
                @Html.AntiForgeryToken()
                <div class="modal-body">

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { value = Model.StartDate, @class = "form-control date-picker", onkeydown = "return false", onpaste = "return false" } })
                            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { value = Model.EndDate, @class = "form-control date-picker", onkeydown = "return false", onpaste = "return false" } })
                            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default modal-close-btn" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary form-group modal-accept-btn">Change</button>
                </div>
            </form>

        </div>
    </div>
</div>
<script>
    $(function () {
        $(".date-picker").datepicker({
            changeMonth: true,
            changeYear: true,
            yearRange: "-10:+10",           
            dateFormat: 'yy-mm-dd',
        });
    });    
</script>
